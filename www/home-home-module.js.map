{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AAER;AAgBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACtB3B,0mBAA0mB,2CAA2C,2xBAA2xB,eAAe,0wBAA0wB,kBAAkB,qVAAqV,oBAAoB,i5CAAi5C,eAAe,goCAAgoC,cAAc,kaAAka,wBAAwB,g1B;;;;;;;;;;;ACA5iL,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACArB;AACuB;AACJ;AACE;AAO/D;IAUE,kBAAoB,GAAqB,EAAU,IAAoB,EAAU,QAAyB;QAAtF,QAAG,GAAH,GAAG,CAAkB;QAAU,SAAI,GAAJ,IAAI,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAF1G,aAAQ,GAAW,EAAE,CAAC;IAEuF,CAAC;IAExG,mCAAgB,GAAtB;;;;;;6BACK,IAAI,CAAC,IAAI,CAAC,UAAU,EAApB,wBAAoB;wBACrB,SAAI;wBAAY,qBAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;;wBAA5C,GAAK,QAAQ,GAAG,SAA4B,CAAC;wBAE7C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;wBACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;wBACJ,qBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC;;wBAApD,SAAS,GAAG,SAAwC;wBAC1D,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;8BACW,EAAT,uBAAS;;;6BAAT,wBAAS;wBAAxB;wBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAK,CAAC,CAAC;wBACP,qBAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;;wBAA7D,QAAQ,GAAG,SAAkD;wBACnE,WAAwB,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAC;4BAAjB,IAAI;4BACV,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;gCACb,IAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAK,EAAE,IAAI,CAAC,EAAC;oCACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCAC3B;qCAAM;oCACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCAC7B;6BACF;yBACF;;;wBAXgB,IAAS;;;wBAa5B,SAAI;wBAAS,qBAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;;wBAAnD,GAAK,KAAK,GAAG,SAAsC,CAAC;wBACpD,SAAI;wBAAmB,qBAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC;;wBAA9D,GAAK,eAAe,GAAG,SAAuC,CAAC;;;;;;KAGlE;IArCU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;+EAWyB,4EAAgB,EAAgB,wEAAc,EAAoB,0EAAe;OAV/F,QAAQ,CAuCpB;IAAD,eAAC;CAAA;AAvCoB","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title text-center>\\n      Startseite - ScOuT\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div *ngIf='!back.isLoggedIn'>\\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>\\n            Willkommen bei ScOuT,\\n        </ion-card-title>\\n        <ion-card-subtitle>\\n            dem Organisations-Tool für Vereine und Events.\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <h1>So einfach gehts:</h1>\\n        <p text-center>Registrieren &rarr; Team für deinen Verein anlegen  <br>&rarr; Und los geht's mit der Eventplanung!</p>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>Du bist nicht eingeloggt</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-button (click)=\\\"nav.navigateLogin('home')\\\" color='secondary' expand=\\\"block\\\">Weiter zum Login</ion-button>\\n        <ion-item></ion-item>\\n        <ion-label>Noch kein Account?</ion-label>\\n        <ion-button (click)=\\\"nav.navigateForward('register')\\\" color='secondary' expand=\\\"block\\\">Dann registrier dich!</ion-button>\\n        <ion-item>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n\\n  <div *ngIf='back.isLoggedIn'>\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-card-title>Hallo {{username.name}}!</ion-card-title>\\n        <ion-card-subtitle>Hier ist deine Übersicht:</ion-card-subtitle>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-list>\\n\\n          <div *ngIf='tasksTODO !== undefined && tasksFUTURE !== undefined'>\\n            <ion-item detail (click)=\\\"nav.navigateTasklist()\\\" *ngIf='tasksFUTURE.length > 0 || tasksTODO.length > 0'>\\n              <ion-button *ngIf='tasksTODO.length > 0' color='danger' size='small'>\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button  *ngIf='tasksTODO.length == 0' color='secondary'>\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n              </ion-button>\\n              <ion-label>Du hast {{tasksTODO.length}} dringende Tasks</ion-label>\\n            </ion-item>\\n\\n            <ion-item *ngIf='tasksFUTURE.length > 0' detail (click)=\\\"nav.navigateTasklist()\\\">\\n              <ion-button color='secondary'>\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark\\\"></ion-icon>\\n              </ion-button>\\n              <ion-label>Du hast {{tasksFUTURE.length}} offene Tasks</ion-label>\\n            </ion-item>\\n            \\n            <div *ngIf='teams !== undefined'>\\n              <div *ngIf='events !== undefined'>\\n\\n                <ion-item *ngIf='tasksFUTURE.length == 0 && tasksTODO.length == 0'>\\n                  <ion-grid>\\n                    <ion-row>\\n                      Du hast keine anstehenden Tasks\\n                    </ion-row>\\n                    <ion-row center *ngIf='events.length > 0'>\\n                      <ion-button color='secondary' expand='block' (click)=\\\"nav.navigateForward('createtask')\\\">\\n                        <ion-icon name=\\\"checkmark\\\"></ion-icon><ion-icon name=\\\"add\\\"></ion-icon>Task erstellen\\n                      </ion-button>\\n                    </ion-row>\\n                    <ion-row *ngIf='events.length == 0 && teams.length > 0'>\\n                      Erstelle zuerst ein Event!\\n                    </ion-row>\\n                    <ion-row *ngIf='teams.length == 0'>\\n                      Erstelle zuerst ein Team!\\n                    </ion-row>\\n                  </ion-grid>\\n                </ion-item>\\n\\n                <ion-item detail (click)='nav.navigateEventlist()' *ngIf='events.length > 0'>\\n                  <ion-button color='secondary'>\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"calendar\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-label>Du organisierts {{events.length}} Events</ion-label>\\n                </ion-item>\\n                <ion-item *ngIf='events.length == 0'>\\n                  <ion-grid>\\n                    <ion-row>\\n                      Du planst noch keine Events\\n                    </ion-row>\\n                    <ion-row center *ngIf='teams.length > 0'>\\n                      <ion-button color='secondary' expand='block' (click)=\\\"nav.navigateForward('createeventchooser')\\\">\\n                        <ion-icon name=\\\"calendar\\\"></ion-icon><ion-icon name=\\\"add\\\"></ion-icon>Event erstellen\\n                      </ion-button>\\n                    </ion-row>\\n                    <ion-row *ngIf='teams.length == 0'>\\n                      Erstelle zuerst ein Team!\\n                    </ion-row>\\n                  </ion-grid>\\n                </ion-item>\\n              </div>\\n              \\n              <ion-item detail (click)='nav.navigateTeamlist()' *ngIf='teams.length > 0'>\\n                <ion-button color='secondary'>\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"contacts\\\"></ion-icon>\\n                </ion-button>\\n                <ion-label>Du bist Mitglied von {{teams.length}} Teams</ion-label>\\n              </ion-item>\\n            </div>\\n            <div *ngIf='teamInvitations != undefined'>\\n              <ion-item detail (click)='nav.navigateTeamlist()' *ngIf='teamInvitations.length > 0'>\\n                <ion-button color='secondary'>\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"contacts\\\"></ion-icon>\\n                </ion-button>\\n                <ion-label>Du hast {{teamInvitations.length}} offene Team-Einladungen</ion-label>\\n              </ion-item>\\n            </div>\\n            <div *ngIf='teams != undefined'>\\n              <ion-item *ngIf='teams.length == 0'>\\n                <ion-grid>\\n                  <ion-row>\\n                    Du bist noch nicht Mitglied eines Teams\\n                  </ion-row>\\n                  <ion-row center>\\n                    <ion-button color='secondary' expand='block' (click)=\\\"nav.navigateForward('createteam')\\\">\\n                      <ion-icon name=\\\"contacts\\\"></ion-icon><ion-icon name=\\\"add\\\"></ion-icon>Team erstellen\\n                    </ion-button>\\n                  </ion-row>\\n                </ion-grid>\\n              </ion-item>\\n            </div>\\n          </div>\\n\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n</ion-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { NavigatorService } from '../services/navigator.service';\nimport { BackendService } from '../services/backend.service';\nimport { ReminderService } from '../services/reminder.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  tasksTODO: any;\n  tasksFUTURE: any;\n  events: any;\n  teams: any;\n  teamInvitations: any;\n\n  username: String = '';\n\n  constructor(private nav: NavigatorService, private back: BackendService, private reminder: ReminderService) {}\n\n  async ionViewWillEnter(){\n    if(this.back.isLoggedIn){\n      this.username = await this.back.getAccount();\n\n      this.tasksTODO = [];\n      this.tasksFUTURE = [];\n      const allEvents = await this.back.getEvents('', '', false);\n      this.events = [];\n      for(const event of allEvents){\n        this.events.push(event);\n        const allTasks = await this.back.getTasks(event._id.toString(), '');\n        for(let task of allTasks){\n          if(!task.done) {\n            if(this.reminder.isActive(event, task)){\n              this.tasksTODO.push(task);\n            } else {\n              this.tasksFUTURE.push(task);\n            }\n          }\n        }\n      }\n      this.teams = await this.back.getTeams('', '', true);\n      this.teamInvitations = await this.back.getTeams('', '', false);\n\n    }\n  }\n\n}\n"],"sourceRoot":""}