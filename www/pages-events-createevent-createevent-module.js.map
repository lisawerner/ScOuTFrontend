{"version":3,"sources":["webpack:///./src/app/pages/events/createevent/createevent.module.ts","webpack:///./src/app/pages/events/createevent/createevent.page.html","webpack:///./src/app/pages/events/createevent/createevent.page.scss","webpack:///./src/app/pages/events/createevent/createevent.page.ts"],"names":[],"mappings":"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","file":"pages-events-createevent-createevent-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreateeventPage } from './createevent.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateeventPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CreateeventPage]\n})\nexport class CreateeventPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Event erzeugen</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"isLoggedIn\\\">\\n    <ion-card>\\n      <ion-card-header *ngIf='template != null && template != undefined'>\\n        <ion-card-title>{{template.name}}</ion-card-title>\\n        <ion-card-subtitle>Erstelle ein Event auf Grundlage dieses Templates. Das Template Ã¼bernimmt Informationen, wie das Team, die Beschreibung und Tasks.</ion-card-subtitle>\\n      </ion-card-header>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveNewEvent(form)\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Event-Name:</ion-label>\\n          <ion-input name=\\\"eventname\\\" ngModel></ion-input>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label>Team:</ion-label>\\n          <ion-select name=\\\"teamname\\\" ngModel *ngIf='template == null || template == undefined'>\\n            <ion-select-option *ngFor=\\\"let team of teams\\\">{{team.name}}</ion-select-option>\\n          </ion-select>\\n          <ion-label *ngIf='template != null && template != undefined'>{{teamname}}</ion-label>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label>Start:</ion-label>\\n          <ion-datetime displayFormat=\\\"DD MMM YYYY HH:mm\\\"  [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" placeholder=\\\"DD MMM YYYY HH:MM\\\" name=\\\"eventbegin\\\" ngModel></ion-datetime>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label>Ende:</ion-label>\\n          <ion-datetime displayFormat=\\\"DD MMM YYYY HH:mm\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" placeholder=\\\"DD MMM YYYY HH:MM\\\" name=\\\"eventend\\\" ngModel></ion-datetime>\\n        </ion-item>\\n    \\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Event Beschreibung (optional):</ion-label>\\n          <ion-textarea name=\\\"eventdescription\\\" [(ngModel)]=\\\"templateDescription\\\"></ion-textarea>\\n        </ion-item>\\n  \\n        <ion-label color=\\\"danger\\\">\\n          <p *ngIf=\\\"validation.invalid\\\">{{validation.message}}</p>\\n        </ion-label>\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Speichern</ion-button>\\n      </form>\\n    </ion-card>\\n  </div>\\n\\n  <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Du bist nicht eingeloggt!\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n        <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50cy9jcmVhdGVldmVudC9jcmVhdGVldmVudC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-createevent',\n  templateUrl: './createevent.page.html',\n  styleUrls: ['./createevent.page.scss'],\n})\nexport class CreateeventPage implements OnInit {\n\n  validation: {invalid: Boolean, message: String};\n\n  minDate: any;\n  maxDate: any;\n\n  teams: any;\n  //\n  template: any;\n  teamname: String;\n  templateDescription: String;\n\n  constructor(private nav:NavigatorService, private back: BackendService) {\n    this.validation = {\n      invalid: false,\n      message: \"\"};\n   }\n\n  ngOnInit() {\n  }\n\n  get getParams(){\n    return this.nav.params;\n  }\n\n  async ionViewWillEnter(){\n    this.templateDescription = \"\";\n    \n    const today = new Date();//moment.utc().startOf('day').format('YYYY-MM-DD');\n    const dd = today.getDate();\n    const mm = today.getMonth() + 1; //because January is 0! \n    const yyyy = today.getFullYear();\n    const maxyyyy = yyyy+10;\n    this.minDate = yyyy + \"-\";\n    this.maxDate = maxyyyy + \"-12-28\";\n    if(mm < 10){\n      this.minDate += '0' + mm + \"-\";\n    } else {\n      this.minDate += mm + \"-\";\n    }\n    if (dd < 10) {\n      this.minDate += '0' + dd;\n    } else {\n      this.minDate += dd;\n    }\n    console.log(this.minDate);\n\n    this.teams = [];\n    if(this.isLoggedIn){\n      console.log(\"Diese Parameter kommen an: \", this.getParams);\n      if(this.getParams === null || this.getParams === undefined){\n        console.log(\"Erstelle Event ohne Templte\")\n        this.teams = await this.back.getTeams('', '', true);\n      } else {\n        console.log(\"Erstelle Event aufgrund eines Templates\")\n        this.template = this.getParams.template;\n        this.teamname = this.getParams.team;\n        this.templateDescription = this.getParams.template.description;\n      }\n    }\n  }\n\n  get isLoggedIn(){\n    return this.back.isLoggedIn;\n  }\n\n  get isNotLoggedIn(){\n    return !this.back.isLoggedIn;\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('eventlist');\n  }\n\n  async saveNewEvent(form) {\n    this.validation = {\n      invalid: false,\n      message: \"\"\n    };\n\n    const result = form.value;\n    //console.log(result);\n    const eventname = result.eventname;\n    if(eventname === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Du musst einen Namen fÃ¼r das Event eingeben!\"\n      };\n      return;\n    }\n    let teamname = result.teamname;\n    let tasklist = [];\n    if(this.template !== undefined && this.template !== null){\n      teamname = this.teamname;\n      tasklist = this.template.tasks;\n    }\n    if(teamname === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Du musst ein Team auswÃ¤hlen!\"\n      };\n      return;\n    }\n\n    const begindate = result.eventbegin.substring(0, 10);\n    const begintime = result.eventbegin.substring(11, 16);\n    if(begindate === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Die Eingabe vom Beginn des Events fehlt!\"\n      };\n      return;\n    }\n    const enddate = result.eventend.substring(0, 10);\n    const endtime = result.eventend.substring(11, 16);\n    if(enddate === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Die Eingabe vom Ende des Events fehlt!\"\n      };\n      return;\n    }\n\n    let request = this.back.createEvent(eventname, teamname, result.eventdescription,\n    begindate, begintime, enddate, endtime, tasklist);\n    request.then((ret) => {\n      if(!ret.success){\n        //console.log(\"Database Feedback: \", ret.error);\n        this.validation = {\n          invalid: true,\n          message: ret.error};\n      } else {\n        //console.log(ret.data)\n        this.nav.navigateForwardParameter('viewevent', ret.data);\n      }\n    }, (err) => {\n      console.error(err);\n    });\n\n  }\n}\n"],"sourceRoot":""}