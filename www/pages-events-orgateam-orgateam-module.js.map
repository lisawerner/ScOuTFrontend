{"version":3,"sources":["webpack:///./src/app/pages/events/orgateam/orgateam.module.ts","webpack:///./src/app/pages/events/orgateam/orgateam.page.html","webpack:///./src/app/pages/events/orgateam/orgateam.page.scss","webpack:///./src/app/pages/events/orgateam/orgateam.page.ts"],"names":[],"mappings":"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","file":"pages-events-orgateam-orgateam-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrgateamPage } from './orgateam.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrgateamPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrgateamPage]\n})\nexport class OrgateamPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title *ngIf='isLoggedIn && event != undefined'>Event: {{event.name}}</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"isLoggedIn\\\">\\n\\n    <ion-button (click)=\\\"nav.navigateForwardParameter('viewevent', this.event)\\\" expand='block' color='secondary'>\\n      <ion-icon name=\\\"calendar\\\"></ion-icon> Zur√ºck zum Event\\n    </ion-button>\\n\\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Orgateam Mitglieder:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <!--\\n          <ion-list *ngFor='let member of orgamembers'>\\n            <ion-item><ion-label>{{member.name}}</ion-label></ion-item>\\n          </ion-list>\\n        -->\\n        <ion-label>{{orgateamPrettyPrint()}}</ion-label>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Lade weitere Teammitglieder ein:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"inviteToOrgateam(form)\\\">\\n          <ion-item lines='none'>\\n            <ion-label>Person:</ion-label>\\n            <ion-select name=\\\"invitee\\\" ngModel required>\\n              <ion-select-option *ngFor=\\\"let member of teammember\\\" value='{{member._id}}'>{{member.name}}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-label color=\\\"danger\\\" *ngIf=\\\"invitationValidation.invalid\\\">{{invitationValidation.message}}</ion-label>\\n          <ion-label *ngIf=\\\"successMessage.success\\\">{{successMessage.message}}</ion-label>\\n          <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Einladen</ion-button>\\n        </form>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <!--TODO: <ion-button expand=\\\"block\\\" color=\\\"secondary\\\">Orgateam verlassen</ion-button>-->\\n\\n  </div>\\n\\n  <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Du bist nicht eingeloggt!\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n        <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50cy9vcmdhdGVhbS9vcmdhdGVhbS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-orgateam',\n  templateUrl: './orgateam.page.html',\n  styleUrls: ['./orgateam.page.scss'],\n})\nexport class OrgateamPage implements OnInit {\n\n  private invitationValidation: {invalid: Boolean, message: String};\n  private successMessage: {success: Boolean, message: String};\n  \n  event: any;\n  orgamembers: any;\n  teammember: any;\n\n  constructor(private nav: NavigatorService, private backendservice: BackendService) {\n    this.invitationValidation = {\n      invalid: false,\n      message: \"\"\n    };\n    this.successMessage = {\n      success: false,\n      message: \"\"\n    };\n   }\n\n  ngOnInit() {\n  }\n\n  get getParams(){\n    return this.nav.params;\n  }\n\n  async ionViewWillEnter(){\n    if(this.isLoggedIn){\n      this.event = this.getParams;\n      const eventID = this.event._id.toString();\n      this.orgamembers = await this.backendservice.getEventOrgateam(eventID);\n\n      const teamssss = await this.backendservice.getTeams('', eventID, true);\n      const team = teamssss[0];\n\n      const completeMemberlist = await this.backendservice.getTeamMemberlist(team._id);\n      this.teammember = [];\n      for(const member of completeMemberlist.memberlist){\n        if(this.event.members.indexOf(member._id) < 0){\n          this.teammember.push(member);\n        }\n      }\n    }\n  }\n\n  get isLoggedIn(){\n    return this.backendservice.isLoggedIn;\n  }\n\n  get isNotLoggedIn(){\n    return !this.backendservice.isLoggedIn;\n  }\n\n  orgateamPrettyPrint(){\n    if(this.orgamembers !== undefined){\n      let prettyPrint = '';\n      for(const member of this.orgamembers){\n        prettyPrint += member.name + ', ';\n      }\n      prettyPrint = prettyPrint.substring(0, prettyPrint.length-2);\n      //console.log(prettyPrint);\n      return prettyPrint;\n    } else {\n      return  '';\n    }\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('eventlist');\n  }\n\n  async inviteToOrgateam(form){\n    //console.log(\"Start Inviting Method\");\n    const result = form.value;\n    console.log(result);\n    this.invitationValidation = {\n      invalid: false,\n      message: ''\n    };\n\n    let request = this.backendservice.inviteOrgateam(this.event._id, this.event.teamref, result.invitee);\n    request.then((ret) => {\n      if(!ret.success){\n        this.invitationValidation = {\n          invalid: false,\n          message: ret.error\n        };\n      } else {\n        console.log('Request successfull');\n        let newSelection = [];\n        for(const member of this.teammember){\n          if(member.name !== ret.data){\n            newSelection.push(member);\n          }\n        }\n        this.teammember = newSelection;\n        this.successMessage = {\n          success: true,\n          message: ret.data + \" wurde eingeladen.\"\n        };\n      }\n    }, (err) => {\n      console.log(\"Hier die Fehlermeldung angeben?\")\n      console.error(err);\n    });\n  }\n\n}\n"],"sourceRoot":""}