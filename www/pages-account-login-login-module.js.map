{"version":3,"sources":["webpack:///./src/app/pages/account/login/login.module.ts","webpack:///./src/app/pages/account/login/login.page.html","webpack:///./src/app/pages/account/login/login.page.scss","webpack:///./src/app/pages/account/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,wiCAAwiC,oBAAoB,ud;;;;;;;;;;;ACA5jC,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;ACAb;AACoB;AACJ;AAOlE;IAIE,mBAAoB,GAAqB,EAAS,cAA8B;QAA5D,QAAG,GAAH,GAAG,CAAkB;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAC9E,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,EAAE;SAAC,CAAC;IACjB,CAAC;IAED,4BAAQ,GAAR,cAAc,CAAC;IAEf,yBAAK,GAAL,UAAM,IAAI;QAAV,iBA4BC;QA3BC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,IAAG,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,QAAQ,KAAK,EAAE,EAAC;YAC/C,IAAI,CAAC,UAAU,GAAG;gBAChB,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,mFAAmF;aAC7F,CAAC;YACF,OAAO;SACR;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvE,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG;YACf,IAAG,CAAC,GAAG,CAAC,OAAO,EAAC;gBACd,gDAAgD;gBAChD,KAAI,CAAC,UAAU,GAAG;oBAChB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,GAAG,CAAC,KAAK;iBAAC,CAAC;aACvB;iBAAM;gBACL,KAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;aAC9B;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAxCU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uGAAgC;;SAEjC,CAAC;+EAKyB,mFAAgB,EAAyB,+EAAc;OAJrE,SAAS,CAyCrB;IAAD,gBAAC;CAAA;AAzCqB","file":"pages-account-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n\\n    <ion-title>Login</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"goBack()\\\" disabled>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>\\n        Gib deine Login-Daten ein:\\n      </ion-card-title>\\n    </ion-card-header>\\n    \\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login(form)\\\">\\n      \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Mail-Adresse:</ion-label>\\n        <ion-input type=\\\"email\\\" name=\\\"email\\\" ngModel required></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Passwort:</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"password\\\" ngModel required></ion-input>\\n      </ion-item>\\n      \\n      <ion-label color=\\\"danger\\\">\\n        <p *ngIf=\\\"validation.invalid\\\">{{validation.message}}</p>\\n      </ion-label>\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Anmelden</ion-button>\\n    </form>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  <ion-card>\\n    <ion-card-content>\\n      <ion-label>Du hast noch keinen Account?</ion-label>\\n      <ion-button expand=\\\"block\\\" (click)=\\\"nav.navigateForward('register')\\\" color=\\\"secondary\\\">Weiter zur Registrierung</ion-button>    \\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  private validation: {invalid: Boolean, message: String};\n\n  constructor(private nav: NavigatorService, public backendservice: BackendService) {\n    this.validation = {\n      invalid: false,\n      message: \"\"};\n  }\n\n  ngOnInit() {  }\n\n  login(form){\n    const result = form.value;\n    this.validation = {\n      invalid: false,\n      message: \"\"\n    };\n    \n    if(result.email === '' || result.password === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Du musst eine etwas in den Feldern der E-Mail Adresse und des Passwortes angeben.\"\n      };\n      return;\n    }\n\n    let request = this.backendservice.login(result.email, result.password);\n    request.then((ret) => {\n      if(!ret.success){\n        //console.log(\"Database Feedback: \", ret.error);\n        this.validation = {\n          invalid: true,\n          message: ret.error};\n      } else {\n        this.nav.navigateLeafLogin();\n      }\n    }, (err) => {\n      console.error(err);\n    });\n  }\n}\n"],"sourceRoot":""}