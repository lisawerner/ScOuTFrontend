{"version":3,"sources":["webpack:///./src/app/pages/teams/viewteam/viewteam.module.ts","webpack:///./src/app/pages/teams/viewteam/viewteam.page.html","webpack:///./src/app/pages/teams/viewteam/viewteam.page.scss","webpack:///./src/app/pages/teams/viewteam/viewteam.page.ts"],"names":[],"mappings":"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","file":"pages-teams-viewteam-viewteam-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewteamPage } from './viewteam.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewteamPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ViewteamPage]\n})\nexport class ViewteamPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">  \\n    <ion-title *ngIf='isLoggedIn'>Team: {{team.name}}</ion-title>\\n  \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n\\n  <div *ngIf=\\\"isLoggedIn\\\">\\n    <ion-card *ngIf='team != undefined && myEvents != undefined'>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Team-Infos:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item (click)=\\\"nav.navigateForwardParameter('viewteammember', team)\\\" detail>\\n          <ion-button  expand=\\\"block\\\" color=\\\"secondary\\\">\\n            <ion-icon name=\\\"contacts\\\"></ion-icon>{{team.members.length}} Teammitglieder\\n          </ion-button>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForwardParameter('eventlist', team)\\\" detail>\\n          <ion-button  expand=\\\"block\\\" color=\\\"secondary\\\">\\n            <ion-icon name=\\\"calendar\\\"></ion-icon>{{myEvents.length}} Events\\n          </ion-button>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForwardParameter('tasklist', {team: team, event: null})\\\" detail *ngIf='myTasksLength != undefined'>\\n          <ion-button  expand=\\\"block\\\" color=\\\"danger\\\" *ngIf='myTasksLength > 0'>\\n            <ion-icon name=\\\"checkmark\\\"></ion-icon>{{myTasksLength}} dringende Tasks</ion-button>\\n          <ion-button  expand=\\\"block\\\" color=\\\"secondary\\\" *ngIf='myTasksLength == 0'>\\n            <ion-icon name=\\\"checkmark\\\"></ion-icon>{{myTasksLength}} dringende Task</ion-button>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  \\n    <div *ngIf='myEvents != undefined'>\\n      <ion-card>\\n        <ion-card-header color='light'>\\n          <ion-card-title>Team-Events:</ion-card-title>\\n          <ion-card-subtitle *ngIf='myEvents.length > 0'>Hier bist du ein Orgamitglied!</ion-card-subtitle>\\n          <ion-card-subtitle *ngIf='myEvents.length == 0'>Du bist aktuell nirgends ein Orgamitglied!</ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list *ngFor=\\\"let event of myEvents\\\">\\n            <ion-item (click)=\\\"nav.navigateForwardParameter('viewevent', event.event)\\\" detail>\\n              <ion-label>\\n                {{event.event.name}}\\n                <p *ngIf='event.tasksLength > 0'>\\n                  <ion-icon name=\\\"checkmark\\\" color='danger'></ion-icon> {{event.tasksLength}} dringende Tasks\\n                </p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n\\n    <div *ngIf='myPastEvents != undefined'>\\n      <ion-card *ngIf='myPastEvents.length > 0'>\\n        <ion-card-header color='light'>\\n          <ion-card-title>Vergangene Team-Events:</ion-card-title>\\n          <ion-card-subtitle>Du hattest in deinem Team schon folgende Events plant:\\n            <p>(Tipp: Erstelle aus den Events Templates, dann kannst du sie bedenkenlos l√∂schen.)</p>\\n          </ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list *ngFor=\\\"let event of myPastEvents\\\">\\n            <ion-item (click)=\\\"nav.navigateForwardParameter('viewevent', event)\\\" lines='none' detail>\\n              <ion-label>{{event.name}}</ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n  </div>\\n  \\n  <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Du bist nicht eingeloggt!\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n        <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlYW1zL3ZpZXd0ZWFtL3ZpZXd0ZWFtLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { ReminderService } from 'src/app/services/reminder.service';\n\n@Component({\n  selector: 'app-viewteam',\n  templateUrl: './viewteam.page.html',\n  styleUrls: ['./viewteam.page.scss'],\n})\nexport class ViewteamPage implements OnInit {\n  \n  team: any = [];\n\n  myEvents: any = [];\n  myPastEvents: any;\n\n  myTasksLength: number;\n\n  constructor(private nav: NavigatorService, private back: BackendService, private reminder: ReminderService) {  }\n\n  ngOnInit() {  }\n\n  get getParams(){\n    return this.nav.params;\n  }\n\n  async ionViewWillEnter(){\n    if(this.isLoggedIn){\n      this.team = this.getParams;\n      this.myEvents = []\n      this.myPastEvents = [];\n      const events = await this.back.getEvents(this.team._id, '', true);\n      this.myTasksLength = 0;\n      for(let event of events){\n        if(this.reminder.isPast(event)){\n          this.myPastEvents.push(event);\n        } else {\n          if(event.members.includes(this.back.myID)){\n            const allTasks = await this.back.getTasks(event._id, '');\n            let activeLength = 0;\n            for(const task of allTasks){\n              if(!task.done){\n                if(this.reminder.isActive(event, task)){\n                  activeLength++;\n                }\n              }\n            }\n            this.myTasksLength = this.myTasksLength + activeLength;\n            this.myEvents.push({event: event, tasksLength: activeLength});\n          }\n        }\n      }\n    }\n  }\n\n  get isNotLoggedIn(){\n    return !this.back.isLoggedIn;\n  }\n\n  get isLoggedIn(){\n    return this.back.isLoggedIn;\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('teamlist');\n  }\n  \n}\n"],"sourceRoot":""}