{"version":3,"sources":["webpack:///./src/app/pages/account/register/register.module.ts","webpack:///./src/app/pages/account/register/register.page.html","webpack:///./src/app/pages/account/register/register.page.scss","webpack:///./src/app/pages/account/register/register.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,qwDAAqwD,oBAAoB,id;;;;;;;;;;;ACAzxD,+DAA+D,+J;;;;;;;;;;;;;;;;;;;ACAb;AACoB;AACJ;AAOlE;IAIE,sBAAoB,GAAqB,EAAU,cAA8B;QAA7D,QAAG,GAAH,GAAG,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAC/E,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,EAAE;SAAC,CAAC;IACjB,CAAC;IAED,+BAAQ,GAAR;IACA,CAAC;IAEK,+BAAQ,GAAd,UAAe,IAAI;;;;;gBACX,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG;oBAChB,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,EAAE;iBACZ,CAAC;gBAEF,IAAG,MAAM,CAAC,QAAQ,KAAK,EAAE,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,IAAI,MAAM,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAC;oBAC9F,IAAI,CAAC,UAAU,GAAG;wBAChB,OAAO,EAAE,IAAI;wBACb,OAAO,EAAE,qCAAqC;qBAAC,CAAC;iBACnD;qBAAM;oBACL,IAAG,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,OAAO,EAAC;wBACpC,IAAI,CAAC,UAAU,GAAG;4BAChB,OAAO,EAAE,IAAI;4BACb,OAAO,EAAE,0CAA0C;yBAAC,CAAC;qBACxD;yBAAM;wBACD,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;wBACvG,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG;4BACf,IAAG,CAAC,GAAG,CAAC,OAAO,EAAC;gCACd,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;gCAC9C,KAAI,CAAC,UAAU,GAAG;oCAChB,OAAO,EAAE,IAAI;oCACb,OAAO,EAAE,GAAG,CAAC,KAAK;iCAAC,CAAC;6BACvB;iCAAM;gCACL,KAAI,CAAC,GAAG,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;6BAC1C;wBACH,CAAC,EAAE,UAAC,GAAG;4BACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACrB,CAAC,CAAC;qBACH;iBACF;;;;KAEF;IA9CU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gHAAmC;;SAEpC,CAAC;+EAKyB,mFAAgB,EAA0B,+EAAc;OAJtE,YAAY,CA+CxB;IAAD,mBAAC;CAAA;AA/CwB","file":"pages-account-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"openSidemenu()\\\" disabled>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <ion-title>Registrierung</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"goBack()\\\" disabled>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    \\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register(form)\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Anzeigename:</ion-label>\\n        <ion-input name=\\\"name\\\" ngModel required placeholder='Wird anderen Nutzern angezeigt' maxlength='32' type='text'></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Mail-Adresse:</ion-label>\\n        <ion-input type=\\\"email\\\" name=\\\"email\\\" ngModel required placeholder='Login-Kennung'></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Passwort:</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"password\\\" ngModel required></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Passwort wiederholen:</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"confirm\\\" ngModel required></ion-input>\\n      </ion-item>\\n      \\n      <!-- TODO:\\n        Hier muss noch ein Captcha hin! :D\\n        Hier muss noch ein Zustimmen der Datenschutzerkl채rung hin! :D\\n        Hier muss ein Best채tigen der AGB hin! :D -->\\n      <ion-label color=\\\"danger\\\">\\n        <p *ngIf=\\\"validation.invalid\\\">{{validation.message}}</p>\\n      </ion-label>\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Registrieren</ion-button>\\n    </form>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  <ion-card>\\n    <ion-card-content>\\n      <ion-label>Du hast bereits einen Account?</ion-label>\\n      <ion-button expand=\\\"block\\\" (click)=\\\"nav.navigateLogin('home')\\\" color=\\\"secondary\\\">Weiter zum Login</ion-button>    \\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  private validation: {invalid: Boolean, message: String};\n\n  constructor(private nav: NavigatorService, private backendService: BackendService) {\n    this.validation = {\n      invalid: false,\n      message: \"\"};\n  }\n\n  ngOnInit() {\n  }\n\n  async register(form) {\n    const result = form.value;\n    this.validation = {\n      invalid: false,\n      message: \"\"\n    };\n\n    if(result.password === '' || result.confirm === '' || result.name === '' || result.email === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Deine Eingabe ist nicht vollst채ndig\"};\n    } else {\n      if(result.password !== result.confirm){\n        this.validation = {\n          invalid: true,\n          message: \"Die Passworteingabe stimmt nicht 체berein\"};\n      } else {\n        let request = this.backendService.register(result.name, result.email, result.password, result.confirm);\n        request.then((ret) => {\n          if(!ret.success){\n            console.log(\"Database Feedback: \", ret.error);\n            this.validation = {\n              invalid: true,\n              message: ret.error};\n          } else {\n            this.nav.navigateForward('tutorialmenu');\n          }\n        }, (err) => {\n          console.error(err);\n        })\n      }\n    }\n\n  }\n}\n"],"sourceRoot":""}