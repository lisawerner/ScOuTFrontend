{"version":3,"sources":["webpack:///./src/app/pages/help/sitemap/sitemap.module.ts","webpack:///./src/app/pages/help/sitemap/sitemap.page.html","webpack:///./src/app/pages/help/sitemap/sitemap.page.scss","webpack:///./src/app/pages/help/sitemap/sitemap.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,k3L;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;ACAb;AACoB;AAOtE;IAEE,qBAAoB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;IAAI,CAAC;IAE9C,8BAAQ,GAAR;IACA,CAAC;IALU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,0GAAkC;;SAEnC,CAAC;+EAGyB,mFAAgB;OAF9B,WAAW,CAOvB;IAAD,kBAAC;CAAA;AAPuB","file":"pages-help-sitemap-sitemap-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SitemapPage } from './sitemap.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SitemapPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SitemapPage]\n})\nexport class SitemapPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Hilfe: Sitemap</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-header color='light'>\\n      <ion-card-title>App-Seiten: Team</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item (click)=\\\"nav.navigateForward('teamlist')\\\" detail>\\n          <ion-label>Übersicht: Teams</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('createteam')\\\" detail>\\n          <ion-label>Team erstellen</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Teamseite</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Öffne ein Team, indem du z.B. auf die Teamliste gehst und dort ein konkretes Team auswählst\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Teammitglieder</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Öffne die Teamseite ein konkretes Team und gehe von dort in die Mitgliederliste\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header color='light'>\\n      <ion-card-title>App-Seiten: Event</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item (click)=\\\"nav.navigateForward('eventlist')\\\" detail>\\n          <ion-label>Übersicht: Events</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('createeventchooser')\\\" detail>\\n          <ion-label>Event erstellen</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Eventseite</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Öffne ein Event, indem du z.B. auf die Eventliste gehst und dort ein konkretes Events auswählst\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Orgateam</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Öffne ein die Eventseite eines konkreten Event und von dort aus das Orgateam\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header color='light'>\\n      <ion-card-title>App-Seiten: Task</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item (click)=\\\"nav.navigateForward('tasklist')\\\" detail>\\n          <ion-label>Taskliste</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('createtask')\\\" detail>\\n          <ion-label>Task erstellen</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Taskseite</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Öffne ein Task, indem du z.B. auf die Taskliste gehst und einen konkreten Task auswählst\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header color='light'>\\n      <ion-card-title>Weitere App-Seiten</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item (click)=\\\"nav.navigateForward('home')\\\" detail>\\n          <ion-label>Startseite</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('login')\\\" detail>\\n          <ion-label>Login</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('register')\\\" detail>\\n          <ion-label>Registrierung</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('starttutorial')\\\" detail>\\n          <ion-label>Hilfe: Starttutorial</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-label>Hilfe: Sitemap</ion-label>\\n            </ion-row>\\n            <ion-row>\\n              <ion-card-subtitle>\\n                Hier befindest du dich gerade.\\n              </ion-card-subtitle>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('starttutorial')\\\" detail>\\n          <ion-label>Hilfe: Begriffe</ion-label>\\n        </ion-item>\\n        <ion-item (click)=\\\"nav.navigateForward('accountsettings')\\\" detail>\\n          <ion-label>Settings: Account</ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\\n\\n<ion-footer color=\\\"secondary\\\">\\n  <!-- Help-Footer-->\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons>\\n      <ion-button (click)=\\\"nav.navigateForward('starttutorial')\\\">\\n        <ion-icon name=\\\"play-circle\\\"></ion-icon> Tutorial\\n      </ion-button>\\n      <ion-button (click)=\\\"nav.navigateForward('sitemap')\\\">\\n        <ion-icon name=\\\"compass\\\"></ion-icon> Sitemap\\n      </ion-button>\\n      <ion-button (click)=\\\"nav.navigateForward('lexikon')\\\">\\n        <ion-icon name=\\\"book\\\"></ion-icon> Begriffe\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hlbHAvc2l0ZW1hcC9zaXRlbWFwLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\n\n@Component({\n  selector: 'app-sitemap',\n  templateUrl: './sitemap.page.html',\n  styleUrls: ['./sitemap.page.scss'],\n})\nexport class SitemapPage implements OnInit {\n\n  constructor(private nav: NavigatorService) { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}