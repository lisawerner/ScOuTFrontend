{"version":3,"sources":["webpack:///./src/app/pages/events/eventlist/eventlist.module.ts","webpack:///./src/app/pages/events/eventlist/eventlist.page.html","webpack:///./src/app/pages/events/eventlist/eventlist.page.scss","webpack:///./src/app/pages/events/eventlist/eventlist.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEI;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBhC,klBAAklB,UAAU,ybAAyb,kBAAkB,2JAA2J,uBAAuB,wEAAwE,uBAAuB,OAAO,qBAAqB,qCAAqC,iBAAiB,mJAAmJ,oBAAoB,8FAA8F,0BAA0B,00C;;;;;;;;;;;ACAzqD,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;ACAb;AACoB;AACJ;AACE;AAOpE;IASE,uBAAoB,GAAqB,EAAU,cAA8B,EAAU,QAAyB;QAAhG,QAAG,GAAH,GAAG,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QALpH,aAAQ,GAAY,KAAK,CAAC;QAE1B,mBAAc,GAAY,KAAK,CAAC;IAGwF,CAAC;IAEzH,gCAAQ,GAAR;IACA,CAAC;IAED,sBAAI,oCAAS;aAAb;YACE,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QACzB,CAAC;;;OAAA;IAEK,wCAAgB,GAAtB;;;;;;6BACK,IAAI,CAAC,UAAU,EAAf,yBAAe;wBAChB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAExB,YAAY,GAAG,IAAI,CAAC;6BACrB,KAAI,CAAC,SAAS,KAAK,IAAI,GAAvB,wBAAuB;wBAElB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;wBAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBACrB,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;;wBAApE,YAAY,GAAG,SAAqD,CAAC;wBACrE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;4BAEN,qBAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;;wBAAhE,YAAY,GAAG,SAAiD,CAAC;wBAChD,qBAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;;wBAA3D,QAAQ,GAAG,SAAgD;wBACjE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;;;wBAEtC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;wBACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;8BACK,EAAZ,6BAAY;;;6BAAZ,2BAAY;wBAAlB,EAAE;6BACL,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAzB,wBAAyB;wBACpB,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;wBACX,qBAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC;;wBAAtE,cAAc,GAAG,SAAqD;wBACtE,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;wBACnB,qBAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;;wBAA1D,QAAQ,GAAG,SAA+C;wBAC5D,WAAW,GAAG,EAAE,CAAC;wBACjB,WAAW,GAAG,EAAE,CAAC;wBACrB,WAA0B,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAC;4BAAjB,IAAI;4BACZ,IAAG,CAAC,IAAI,CAAC,IAAI,EAAC;gCACZ,IAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAC;oCAClC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCACxB;qCAAM;oCACL,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCACxB;6BACF;yBACF;wBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;;;wBAE7F,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;wBAnBf,IAAY;;;;;;KAwB7B;IAED,sBAAI,qCAAU;aAAd;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,wCAAa;aAAjB;YACE,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACzC,CAAC;;;OAAA;IAED,iCAAS,GAAT;QACE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAzEU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,kHAAoC;;SAErC,CAAC;+EAUyB,mFAAgB,EAA0B,+EAAc,EAAoB,iFAAe;OATzG,aAAa,CA0EzB;IAAD,oBAAC;CAAA;AA1EyB","file":"pages-events-eventlist-eventlist-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventlistPage } from './eventlist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventlistPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EventlistPage]\n})\nexport class EventlistPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Deine Events</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div *ngIf=\\\"isLoggedIn && events !== undefined\\\">\\n\\n    <ion-card *ngIf='filteredByTeam'>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Eventliste gefiltert nach:</ion-card-title>\\n        <ion-card-subtitle>Team: {{teamname}}</ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngIf='events.length > 0'>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Anstehende Events:</ion-card-title>\\n      </ion-card-header>\\n      <ion-list *ngFor='let event of events'>\\n        <ion-item>\\n          <ion-item (click)=\\\"nav.navigateForwardParameter('viewevent', event.event)\\\" detail  lines='none'>\\n            <ion-label><h2>{{event.event.name}}</h2>\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <p *ngIf='event.begindate == event.enddate'>{{event.event.begindate}}</p>\\n                    <p *ngIf='event.begindate != event.enddate'>{{event.event.begindate}} bis {{event.event.enddate}}</p>\\n                    <p>Team: {{event.team.name}}</p>\\n                  </ion-col>\\n                  <ion-col>\\n                    <p><ion-icon name=\\\"checkmark\\\" color=\\\"danger\\\"></ion-icon>{{event.tasks.length}} Tasks</p>\\n                    <p><ion-icon name=\\\"checkmark\\\" color=\\\"medium\\\"></ion-icon>{{event.futureTasks.length}} Tasks</p>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-label>\\n          </ion-item>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card>\\n\\n    <ion-card *ngIf='events.length == 0'>\\n      <ion-card-header>\\n        <ion-card-title>Du hast aktuell keine Events</ion-card-title>\\n      </ion-card-header>\\n    </ion-card>\\n  </div>\\n\\n  <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Du bist nicht eingeloggt!\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n        <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n  \\n<ion-footer *ngIf=\\\"isLoggedIn\\\">\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div (click)=\\\"nav.navigateForward('createeventchooser')\\\" color='secondary' *ngIf='hasTeams' text-center>\\n      <ion-icon name=\\\"calendar\\\"></ion-icon><ion-icon name=\\\"add\\\"></ion-icon>Event erstellen\\n    </div>\\n    <div *ngIf='!hasTeams' (click)=\\\"nav.navigateForward('createteam')\\\" color='secondary' text-center>\\n        <ion-icon name=\\\"contacts\\\"></ion-icon><ion-icon name=\\\"add\\\"></ion-icon> Erstelle vorher ein Team\\n    </div>\\n  </ion-toolbar>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50cy9ldmVudGxpc3QvZXZlbnRsaXN0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { ReminderService } from 'src/app/services/reminder.service';\n\n@Component({\n  selector: 'app-eventlist',\n  templateUrl: './eventlist.page.html',\n  styleUrls: ['./eventlist.page.scss'],\n})\nexport class EventlistPage implements OnInit {\n\n  events: any;\n  pastEvents: any;\n  hasTeams: boolean = false;\n\n  filteredByTeam: boolean = false;\n  teamname: String;\n\n  constructor(private nav: NavigatorService, private backendservice: BackendService, private reminder: ReminderService) { }\n\n  ngOnInit() {\n  }\n\n  get getParams(){\n    return this.nav.params;\n  }\n\n  async ionViewWillEnter(){\n    if(this.isLoggedIn){\n      this.filteredByTeam = false;\n\n      let resultEvents = null;\n      if(this.getParams !== null){\n        //Filtered by a Team!\n        const teamID = this.getParams._id.toString();\n        this.teamname = this.getParams.name;\n        resultEvents = await this.backendservice.getEvents(teamID, '', true);\n        this.filteredByTeam = true;\n        this.hasTeams = true;\n      } else {\n        resultEvents = await this.backendservice.getEvents('', '', true);\n        const allTeams = await this.backendservice.getTeams('', '', true);\n        this.hasTeams = allTeams.length > 0;\n      }\n      this.events = [];\n      this.pastEvents = [];\n      for(let ev of resultEvents){\n        if(!this.reminder.isPast(ev)){\n          const eventID = ev._id.toString();\n          const teameventArray = await this.backendservice.getTeams('', eventID, true);\n          const teamevent = teameventArray[0];\n          const allTasks = await this.backendservice.getTasks(eventID, '');\n          let activeTasks = [];\n          let futureTasks = [];\n          for(const task of allTasks){\n            if(!task.done){\n              if(this.reminder.isActive(ev, task)){\n                activeTasks.push(task);\n              } else {\n                futureTasks.push(task);\n              }\n            }\n          }\n          this.events.push({event: ev, team: teamevent, tasks: activeTasks, futureTasks: futureTasks});\n        } else {\n          this.pastEvents.push(ev);\n        }\n        \n      }\n    }\n  }\n\n  get isLoggedIn(){\n    return this.backendservice.isLoggedIn;\n  }\n\n  get isNotLoggedIn(){\n    return !this.backendservice.isLoggedIn;\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('eventlist');\n  }\n}\n"],"sourceRoot":""}