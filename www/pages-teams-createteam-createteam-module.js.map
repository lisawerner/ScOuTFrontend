{"version":3,"sources":["webpack:///./src/app/pages/teams/createteam/createteam.module.ts","webpack:///./src/app/pages/teams/createteam/createteam.page.html","webpack:///./src/app/pages/teams/createteam/createteam.page.scss","webpack:///./src/app/pages/teams/createteam/createteam.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,05BAA05B,oBAAoB,8nB;;;;;;;;;;;ACA96B,+DAA+D,mK;;;;;;;;;;;;;;;;;;;ACAb;AACoB;AACJ;AAOlE;IAIE,wBAAoB,GAAqB,EAAU,cAA8B;QAA7D,QAAG,GAAH,GAAG,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAC/E,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAEK,yCAAgB,GAAtB;;;;;;KAEC;IAED,mCAAU,GAAV,UAAW,IAAI;QAAf,iBA4BC;QA3BC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,IAAG,MAAM,KAAK,EAAE,EAAC;YACf,IAAI,CAAC,UAAU,GAAG;gBAChB,OAAO,EAAE,IAAI;gBACb,OAAO,EAAE,mCAAmC;aAC7C,CAAC;YACF,OAAO;SACR;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACrD,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG;YACf,IAAG,CAAC,GAAG,CAAC,OAAO,EAAC;gBACd,gDAAgD;gBAChD,KAAI,CAAC,UAAU,GAAG;oBAChB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,GAAG,CAAC,KAAK;iBAAC,CAAC;aACvB;iBAAM;gBACL,KAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;aACzD;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,sCAAU;aAAd;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,yCAAa;aAAjB;YACE,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QACzC,CAAC;;;OAAA;IAED,kCAAS,GAAT;QACE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IA1DU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,oHAAqC;;SAEtC,CAAC;+EAKyB,mFAAgB,EAA0B,+EAAc;OAJtE,cAAc,CA2D1B;IAAD,qBAAC;CAAA;AA3D0B","file":"pages-teams-createteam-createteam-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreateteamPage } from './createteam.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateteamPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CreateteamPage]\n})\nexport class CreateteamPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Erstelle ein Team</ion-title>\\n  \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  </ion-header>\\n    \\n  <ion-content>\\n    \\n    <ion-card *ngIf=\\\"isLoggedIn\\\">\\n      <ion-card-header color='light'>\\n        <ion-card-title>Gib einen Teamnamen ein:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"createTeam(form)\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Teamname:</ion-label>\\n              <ion-input name=\\\"teamname\\\" ngModel required></ion-input>\\n            </ion-item>\\n\\n            <ion-label color=\\\"danger\\\">\\n              <p *ngIf=\\\"validation.invalid\\\">{{validation.message}}</p>\\n            </ion-label>\\n            <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Team erstellen</ion-button>\\n          </form>\\n      </ion-card-content>\\n    </ion-card>\\n  \\n    <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n      <ion-card-header>\\n        <ion-card-title>\\n          Du bist nicht eingeloggt!\\n        </ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n          <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n        </ion-button>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\\n\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlYW1zL2NyZWF0ZXRlYW0vY3JlYXRldGVhbS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-createteam',\n  templateUrl: './createteam.page.html',\n  styleUrls: ['./createteam.page.scss'],\n})\nexport class CreateteamPage implements OnInit {\n\n  private validation: {invalid: Boolean, message: String};\n\n  constructor(private nav: NavigatorService, private backendservice: BackendService) {\n    this.validation = {\n      invalid: false,\n      message: \"\"\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  async ionViewWillEnter(){\n    // this.teams = await this.backendservice.getTeams();\n  }\n\n  createTeam(form) {\n    const result = form.value.teamname;\n    this.validation = {\n      invalid: false,\n      message: \"\"\n    };\n\n    if(result === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Die Eingabe ist nicht vollstÃ¤ndig\"\n      };\n      return;\n    }\n\n    let request = this.backendservice.createTeam(result);\n    request.then((ret) => {\n      if(!ret.success){\n        //console.log(\"Database Feedback: \", ret.error);\n        this.validation = {\n          invalid: true,\n          message: ret.error};\n      } else {\n        this.nav.navigateForwardParameter('viewteam', ret.data);\n      }\n    }, (err) => {\n      console.error(err);\n    });\n  }\n\n  get isLoggedIn(){\n    return this.backendservice.isLoggedIn;\n  }\n\n  get isNotLoggedIn(){\n    return !this.backendservice.isLoggedIn;\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('createteam');\n  }\n}\n"],"sourceRoot":""}