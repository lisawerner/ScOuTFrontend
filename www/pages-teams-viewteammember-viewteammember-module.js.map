{"version":3,"sources":["webpack:///./src/app/pages/teams/viewteammember/viewteammember.module.ts","webpack:///./src/app/pages/teams/viewteammember/viewteammember.page.html","webpack:///./src/app/pages/teams/viewteammember/viewteammember.page.scss","webpack:///./src/app/pages/teams/viewteammember/viewteammember.page.ts"],"names":[],"mappings":"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","file":"pages-teams-viewteammember-viewteammember-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ViewteammemberPage } from './viewteammember.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ViewteammemberPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ViewteammemberPage]\n})\nexport class ViewteammemberPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n  \\n    <ion-title *ngIf='isLoggedIn'>{{team.name}}: Teammitglieder</ion-title>\\n  \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"nav.goBack()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div *ngIf=\\\"isLoggedIn\\\">\\n    <ion-button (click)=\\\"nav.navigateForwardParameter('viewteam', team)\\\" color=\\\"secondary\\\" expand=\\\"block\\\">Zurück zum Team</ion-button>\\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Teammitglieder:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content *ngIf='memberlist.memberlist.length > 0'>\\n        <ion-list *ngFor='let member of memberlist.memberlist'>\\n          <ion-item>{{member.name}}</ion-item>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  \\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Lade weitere Personen ein:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-label>{{invitationMessage}}</ion-label>\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"invite(form)\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Mail-Adresse:</ion-label>\\n              <ion-input type=\\\"email\\\" name=\\\"email\\\" ngModel required></ion-input>\\n            </ion-item>\\n            \\n            <ion-label color=\\\"danger\\\">\\n              <p *ngIf=\\\"validation.invalid\\\">{{validation.message}}</p>\\n            </ion-label>\\n            <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"secondary\\\">Einladen</ion-button>\\n          </form>\\n      </ion-card-content>\\n    </ion-card>\\n    \\n    <ion-card>\\n      <ion-card-header color='light'>\\n        <ion-card-title>Eingeladene Personen:</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content *ngIf='memberlist.inviteelist.length > 0'>\\n          <ion-list *ngFor='let member of memberlist.inviteelist'>\\n            <ion-item>{{member.name}}</ion-item>\\n          </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n  \\n  </div>\\n\\n  <ion-card *ngIf=\\\"isNotLoggedIn\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Du bist nicht eingeloggt!\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button (click)=\\\"openLogin()\\\" expand='block' color='secondary'>\\n        <ion-icon name=\\\"home\\\"></ion-icon> Zum Login\\n      </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RlYW1zL3ZpZXd0ZWFtbWVtYmVyL3ZpZXd0ZWFtbWVtYmVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigatorService } from 'src/app/services/navigator.service';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-viewteammember',\n  templateUrl: './viewteammember.page.html',\n  styleUrls: ['./viewteammember.page.scss'],\n})\nexport class ViewteammemberPage implements OnInit {\n\n  private validation: {invalid: Boolean, message: String};\n\n  team: any;\n  memberlist: any;\n  invitationMessage: String ='';\n\n  constructor(private nav: NavigatorService, private backendservice: BackendService, public toastController: ToastController) {\n    this.validation = {\n      invalid: false,\n      message: \"\"};\n   }\n\n  ngOnInit() {\n  }\n\n  get getParams(){\n    return this.nav.params;\n  }\n\n  async ionViewWillEnter(){\n    this.team = this.getParams;\n    this.memberlist = await this.backendservice.getTeamMemberlist(this.team._id.toString());\n  }\n\n  async invite(form) {\n    const result = form.value.email;\n    this.validation = {\n      invalid: false,\n      message: \"\"};\n    \n    if(result === ''){\n      this.validation = {\n        invalid: true,\n        message: \"Die Eingabe ist nicht vollständig\"};\n      return;\n    }\n\n    let request = this.backendservice.inviteTeammember(this.team.name, result);\n    request.then((ret) => {\n      if(!ret.success){\n        //console.log(\"Database Feedback: \", ret.error);\n        this.validation = {\n          invalid: true,\n          message: ret.error};\n      } else {\n        this.invitationMessage = result + ' wurde eingeladen.';\n      }\n    }, (err) => {\n      console.error(err);\n    });\n  }\n  async presentToast(email: string) {\n    const toast = await this.toastController.create({\n      message: '\"'+email+'\" wurde in '+this.team.name+' eingeladen',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  get isLoggedIn(){\n    return this.backendservice.isLoggedIn;\n  }\n\n  get isNotLoggedIn(){\n    return !this.backendservice.isLoggedIn;\n  }\n\n  openLogin(){\n    this.nav.navigateLogin('teamlist');\n  }\n\n}\n"],"sourceRoot":""}